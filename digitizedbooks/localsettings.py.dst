# Django local settings for digitizedbooks project.
import os
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

DEBUG = True
TEMPLATE_DEBUG = DEBUG
DEV_ENV = True

# IP addresses that should be allowed to see DEBUG info
INTERNAL_IPS = ('127.0.0.1', '127.0.1.1',)

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': { # the primary db for OE content
        'ENGINE': '',   # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',     # Or path to database file if using sqlite3.
        'USER': '',     # Not used with sqlite3.
        'PASSWORD': '', # Not used with sqlite3.
        'HOST': '',     # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',     # Set to empty string for default. Not used with sqlite3.
        'TEST_CHARSET': 'utf8', # Use UTF8 when creating the test database
    },
}

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, '..', 'media')

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/New_York'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = ''

# Make this unique, and don't share it with anybody.
SECRET_KEY = '1234'

CACHE_BACKEND = 'file:///tmp/oe_cache'

# configuration PDF generation and XSL-FO/PDF temporary files
XSLFO_PROCESSOR = '/usr/bin/fop'
XSLFO_TEMP_DIR = '/tmp/oe_cache/fop'


# for Developers only: to use sessions in runserver, uncomment this line (override configuration in settings.py)
#SESSION_COOKIE_SECURE = False

# django-auth-ldap settings
import ldap
from django_auth_ldap.config import LDAPSearch

AUTH_LDAP_SERVER_URI = ''
AUTH_LDAP_BIND_DN = ''
AUTH_LDAP_BIND_PASSWORD = ''
AUTH_LDAP_USER_SEARCH = LDAPSearch("***")
AUTH_LDAP_GLOBAL_OPTIONS = {
    ldap.OPT_X_TLS_CACERTFILE: '/path/to/cert',
}

AUTH_LDAP_USER_ATTR_MAP = {
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail',
}

# At various points in the process email notifications are sent out.
# Obviously for testing, you should make these your email and/or the
# product owner's.

# Where emails are sent when KDips are uploaded to Box.
HATHITRUST_CONTACT = ''

# Email address from which emails will be sent and the email address to which
# Zephir is told to respond.
EMORY_CONTACT = ''

# Email adderss to notify Zephir that there is a new records have been uploaded.
ZEPHIR_CONTACT = ''

# Zephir FTP credentials
ZEPHIR_FTP_HOST = 'ftp://ftps.cdlib.org'
ZEPHIR_LOGIN = ''
ZEPHIR_PW = ''
# Zephir porvides a test directory.
# In porduction use `submissions` and `runreports`.
ZEPHIR_UPLOAD_DIR = 'testrecs'
ZEPHIR_REPORT_DIR = 'testrecs'

# On our Redhat systems we have to use a non system cURL because Redhat likes
# really old versions of software so we need a setting  for the path. Most
# cases the system's cURL will be fine. You can find your path by running
# `which curl` on the command line. Most likely it will be `/usr/bin/curl`
CURL_PATH = '/usr/bin/curl'

# Alma API key and the base url.
ALMA_APIKEY = 'XXXXXXXXX'
ALMA_API_ROOT = 'https://api-na.hosted.exlibrisgroup.com/almaws/v1/'

# PID Manager credentials
PIDMAN_HOST = '' # the web root where we'll ask for pids
PIDMAN_USER = ''
PIDMAN_PASSWORD = ''
PIDMAN_DOMAIN = '' # the full url of the domain we'll create pids in
PIDMAN_POLICY = ''

# Top level directory where to find all the KDips.
KDIP_DIR = '/path/to/kdips'

# Pattern in directory path that should be skipped.
# In production, we want to skip the test directory.
# Path should be relative to `KDIP_DIR`
SKIP_DIR = 'test'

from celery import app
app.conf.update(
    CELERY_RESULT_BACKEND='djcelery.backends.database:DatabaseBackend',
)

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'basic': {
            'format': '[%(asctime)s] %(levelname)s:%(name)s::%(message)s',
            'datefmt': '%d/%b/%Y %H:%M:%S',
         },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'basic'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename' : '/tmp/digbooks.log',
            'formatter': 'basic'
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'digitizedbooks': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'publish': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}
